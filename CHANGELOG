Version 0.4.9   - 18 August 2002
  * Fixed a bug where an exception was thrown if a message was dated exactly
    on the Unix epoch.
  * Fixed a bug where trailing slashes on the end of maildir/MH mailbox
    arguments were being used in the archive name.

Version 0.4.8   - 20 May 2002
  * Call mkdir() to create a container directory in which we can place any
    created tempfiles 

Version 0.4.7   - 9 May 2002
  * Fixed a bug where archivemail would abort if it received a date header
    with a completely blank value.

Version 0.4.6   - 6 May 2002
  * Fixed a bug where the os.rename() calls could fail if we were moving
    temporary files across different filesystems/partitions.

Version 0.4.5   - 29 April 2002
  * Fixed a bug where if you used the '--delete' option to completely clean
    an mbox mailbox you would get a python error.
  * Added a lot more testing to test_archivemail.py (test_archivemail.py is
    now 37% bigger than archivemail -- scary)
  * Added a new '--size' option which allows you to only archive messages 
    over a certain size.

Version 0.4.4   - 27 April 2002
  * Fixed a bug where the long --suffix option was not working (although the 
    short option, '-s' was).
  * Added time-based format directives to the --suffix option, so that you 
    can do things like specify --suffix='%B%Y' to create archives named
    after the current month and year
  * Added some more tests to test_archivemail.py

Version 0.4.3   - 26 April 2002
  * Fixed a couple of bugs where I was using python version 2.2 syntax that
    was giving errors in python v2.0 and v2.1. 
  * Changed the python requirements for the test script from python version
    2.0 to version 2.1. This is because the unittest module is only available
    in version 2.1 and above.

Version 0.4.2   - 24 April 2002
  * Added the ability to archive messages older than a given absolute date 
    with the new option '--date'.
  * Fixed a bug where archivemail would complain about messages older than 
    1970. Yes, someone had a 'Date' header with 1967 :)
  * Complain if the mailbox to be read does not look like a valid mbox-format
    mailbox.
  * Added a few more tests to test_archivemail.py

Version 0.4.1   - 21 April 2002
  * Don't archive messages that are flagged important unless we are given the
    --include-flagged option. 
  * Fixed a bug where when archiving messages from maildir mailboxes, we were
    not preserving the status information contained in the filename suffix to
    Status and X-Status mbox headers. This means we forgot if we had read or 
    replied to the message.
  * We now complain if an mbox-format mailbox that is being read changes in 
    size -- this should not happen, since we have locked these files, but it
    is a good sanity check.
  * Changed from using the mailbox.PortableUnixMailbox class to read mbox 
    mailboxes to the mailbox.UnixMailbox class. This fixes bugs where unquoted
    'From ' lines in the body of messages were confusing archivemail.

Version 0.4.0   - 17 April 2002
  * Added an option --no-compress to make archives but not compress them with  
    gzip.
  * Added an option --preserve-unread to not archive unread messages.
  * Added a few more unittests.

Version 0.3.2   - 13 April 2002
  * Added a lot more information to the manpage, including examples and 
    notes.
  * Fixed up the README file and archivemail usage message.
  * Added an example archivemail shell script that I run from crontab.

Version 0.3.1   - 12 April 2002
  * Stopped calling 'gzip' externally and started using the gzip library
    so that we can append to a copy of the gzip archive directly. 
  * Removed 'bzip2' and 'compress' options since they are increasing
    complexity without adding much, and needed to be called externally.
    Maybe when python gets a bzip2 library I will add back an option to 
    compress archives using bzip2.
  * Included a man page & sgml docbook source.

Version 0.3.0   - 11 April 2002
  * We now preserve the last-accessed and last-modified timestamps correctly
  * We now preserve the correct permissions on the original mailbox instead
    of always mode 600
  * Fixed a bug where lockfiles were being created that were not
    world-readable
  * Made archivemail work better when used as a python module so it can
    integrate better with unittest. (... although I still distribute it 
    without the .py extension - dodgy?)
  * Bundled a unit-testing script for archivemail 
  * Started using a distutils 'setup.py' script for installation.

Version 0.2.1   - 4 April 2002
  * Since we might not have a parse-able 'Date-Received' or 'Date' field,
    use 5 different ways to guess the date of a message. 
  * Removed the '--use-mtime' option since it is obsolete -- we will always
    use the file modification time for the message if other date-parsing
    methods fail.  
  * Check to see if we are running as root -- if so, change our
    effective userid and groupid to that of the original mailbox. This will 
    make sure any archives or tempfiles we write have the same ownership and 
    will allow the root user to do "archivemail /var/spool/mail/*"
  * Fixed a bug where if you ran 'archivemail.py foo/mbox' it would create 
    the archive file in the current directory instead of the directory 'foo'.

Version 0.2.0   - 3 April 2002
  * Added support for reading from MH mailboxes
  * Refuse to proceed if we would be making tempfiles in world-writable
    directories
  * Clamped down with lots of assert()s checking function parameters
  * Complain earlier if we do not have permission to write to the output
    directory
  * Use the 'Date' field of a message when constructing the 'From_' line
    from a maildir/MH mailbox if there is no 'Delivery-Date' field.

Version 0.1.0   - 31 March 2002
  * Initial release
